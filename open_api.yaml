openapi: 3.0.2
info:
  title: Your Project
  version: 1.0.0
  description: "API for all things \u2026"
paths:
  /api/users:
    get:
      operationId: listUsers
      description: API endpoint that allows users to be viewed or edited.
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
        - api
    post:
      operationId: createUser
      description: API endpoint that allows users to be viewed or edited.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
        - api
  /api/users/{id}:
    get:
      operationId: retrieveUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this user.
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
        - api
    put:
      operationId: updateUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this user.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
        - api
    patch:
      operationId: partialUpdateUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this user.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
        - api
    delete:
      operationId: destroyUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this user.
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - api
  /api/groups:
    get:
      operationId: listGroups
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
          description: ''
      tags:
        - api
    post:
      operationId: createGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
        - api
  /api/groups/{id}:
    get:
      operationId: retrieveGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this group.
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
        - api
    put:
      operationId: updateGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this group.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
        - api
    patch:
      operationId: partialUpdateGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this group.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
      tags:
        - api
    delete:
      operationId: destroyGroup
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
        - name: id
          in: path
          required: true
          description: A unique integer value identifying this group.
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - api
  /api/channels:
    get:
      operationId: listChannels
      description: ''
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Channel'
          description: ''
      tags:
        - api
  /api/channels/{channel_id}:
    get:
      operationId: retrieveChannel
      description: ''
      parameters:
        - name: channel_id
          in: path
          required: true
          description: A unique value identifying this channel.
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
      tags:
        - api
  /api/follows:
    get:
      operationId: listFollows
      description: ''
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Follow'
          description: ''
      tags:
        - api
components:
  schemas:
    User:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: string
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
      required:
        - username
    Group:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 150
      required:
        - name
    Channel:
      type: object
      properties:
        title:
          type: string
          nullable: true
          maxLength: 100
        description:
          type: string
          nullable: true
          maxLength: 3000
        channel_id:
          type: string
          maxLength: 50
      required:
        - channel_id
    Follow:
      type: object
      properties:
        user:
          type: string
        channel:
          type: string
        score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
        - user
        - channel